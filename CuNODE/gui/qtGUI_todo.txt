
**Plot Controller**
figure out how to send a data request without sending data
Add method to populate with sim values: min/max values for each of:
- psd freq
- fft freq
- time
- rms ampl
- psd ampl
- param1
- param2

then, on setting a fixed value:
-per-set min/max of each state
- max of swept-param * single param sets.
-   - for this one, the controller could send back the data after a request that changes plot state.

**Sim controller**
implement init & noise sweeps.
lock solve button if no sys loaded

**Plotter**
start with Grid3D - generate a structured mesh from data
set labels in a separate function that can be reused
get picker data back to plot control frame for single set slicing
figure out how to communicate animation requests.
I think labels should live in plotter, loaded by controller when we load a system.

**Toplevel**
Start by passing sim params to system for solving, and passing plot state to plotter.
Autopopulate a menu with available solvers. Fancy solvers might require a modification of paramaeters in the guis. Figure out how to get em all in one place - perhaps classes in a soverkernels module.
Plot state interpretation and data requesting is the big hard one here I think.
Controller should ferry data between model, controllers, and glue.
Does SOLVER need to own SYSTEM?
