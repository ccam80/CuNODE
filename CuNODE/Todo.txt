CuNODE next steps for mems rig

GUI:
Whole GUI remake is underway, refactored with it's own todo list in gui/

ODE solver:
Template solver class that contains algorithm kernel to be passed to a builder function - test whether we can cuda compile a passed function reference
- solveralgo(inits, dxdt(contains control), dt, fs, noise_sigmas=None (build zeros array length of dxdt),
- consider whether to have a builder kernel per solver or just a kernel per?
-- Thoughts on this: General solver mainclass, which has things like get_fft, load_system, etc.
-- Specific subclass solvers with their own buildkernel and kernel definition.
implement "chunking" as implemented on fft system to allow larger solves
Control equation options
rk4
adjustable step size algo
Grid with different control schemes - can't pass a function to kernel so need to figure out how to crack this one
figure out instruction parallelisation for high-state systems.
Start system from "scratch" - no awkward coding portion before the GUI starts. (will tie into a general refactor)
-Add initial condition sweep logic
